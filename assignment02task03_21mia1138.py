# -*- coding: utf-8 -*-
"""Assignment02Task03_21MIA1138.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1OkqiB7vO4ZQKhgP4SU2xIBI9f6VKI2IH

# Mohamed Riyaz S
# 21MIA1138
# 04.08.2024
"""

!pip install ffmpeg-python
!apt-get install ffmpeg
!pip install opencv-python-headless

import ffmpeg
import os

# Define the input video file path
video_path = '/content/istockphoto-186900953-640_adpp_is.mp4'

# Create directories to save the frames
os.makedirs('I_frames', exist_ok=True)
os.makedirs('P_frames', exist_ok=True)
os.makedirs('B_frames', exist_ok=True)

# Extract I frames
try:
    ffmpeg.input(video_path).filter('select', 'eq(pict_type\\,I)').output('I_frames/frame_%04d.png', vsync='vfr').run(capture_stderr=True, capture_stdout=True)
except ffmpeg.Error as e:
    print(e.stderr.decode())  # Print the error output from ffmpeg

# Extract P frames
try:
    ffmpeg.input(video_path).filter('select', 'eq(pict_type\\,P)').output('P_frames/frame_%04d.png', vsync='vfr').run(capture_stderr=True, capture_stdout=True)
except ffmpeg.Error as e:
    print(e.stderr.decode())  # Print the error output from ffmpeg

# Extract B frames
try:
    ffmpeg.input(video_path).filter('select', 'eq(pict_type\\,B)').output('B_frames/frame_%04d.png', vsync='vfr').run(capture_stderr=True, capture_stdout=True)
except ffmpeg.Error as e:
    print(e.stderr.decode())  # Print the error output from ffmpeg

import cv2
from matplotlib import pyplot as plt

# Function to display frames
def display_frames(frames_folder, frame_type):
    images = [os.path.join(frames_folder, img) for img in os.listdir(frames_folder)]
    for img_path in images:
        img = cv2.imread(img_path)
        img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)
        plt.imshow(img)
        plt.title(f'{frame_type} Frame')
        plt.axis('off')
        plt.show()

# Display I frames
display_frames('I_frames', 'I')

# Display P frames
display_frames('P_frames', 'P')

# Display B frames
display_frames('B_frames', 'B')

# First install the necessary libraries
!pip install ffmpeg-python
!apt-get install ffmpeg
!pip install opencv-python-headless

# Then execute the frame extraction and display script
import ffmpeg
import os
import cv2
from matplotlib import pyplot as plt

# Define the input video file path
video_path = '/content/istockphoto-186900953-640_adpp_is.mp4'

# Create directories to save the frames
os.makedirs('I_frames', exist_ok=True)
os.makedirs('P_frames', exist_ok=True)
os.makedirs('B_frames', exist_ok=True)

# Extract I frames
try:
    ffmpeg.input(video_path).filter('select', 'eq(pict_type\\,I)').output('I_frames/content/I_frames', vsync='vfr').run(capture_stderr=True) # Capture stderr to diagnose errors
except ffmpeg.Error as e:
    print(e.stderr.decode()) # Print the error output from ffmpeg

# Extract P frames
try:
    ffmpeg.input(video_path).filter('select', 'eq(pict_type\\,P)').output('P_frames/content/P_frames', vsync='vfr').run(capture_stderr=True)
except ffmpeg.Error as e:
    print(e.stderr.decode())

# Extract B frames
try:
    ffmpeg.input(video_path).filter('select', 'eq(pict_type\\,B)').output('B_frames/content/B_frames', vsync='vfr').run(capture_stderr=True)
except ffmpeg.Error as e:
    print(e.stderr.decode())

# Function to display frames
def display_frames(frames_folder, frame_type):
    images = [os.path.join(frames_folder, img) for img in os.listdir(frames_folder)]
    for img_path in images:
        img = cv2.imread(img_path)
        img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)
        plt.imshow(img)
        plt.title(f'{frame_type} Frame')
        plt.axis('off')
        plt.show()

# Display I frames
display_frames('I_frames', 'I')

# Display P frames
display_frames('P_frames', 'P')

# Display B frames
display_frames('B_frames', 'B')